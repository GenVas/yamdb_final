name: yamdb_final workflow

on: [push]

jobs:
  
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
      strategy:
        matrix:
          python-version: ["3.7", "3.8"]
    - name: Install dependencies
      run: | 
        # обновление pip
        python -m pip install --upgrade pip 
        # установка flake8 и его плагинов
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        # установка зависимостей
        pip install -r requirements.txt 

    - name: Test with flake8 and django tests
      run: |
        # запуск проверки проекта по flake8
        python -m flake8
        # перейти в папку, содержащую manage.py - <корневая_папка>/<папка_проекта>/manage.py
        # cd infra_project/
        # запустить написанные разработчиком тесты
        pytest #python manage.py test
  
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 # Проверяет доступность репозитория DockerHub для workflow
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 # Вызывает сборщик контейнеров docker
      - name: Login to Docker 
        uses: docker/login-action@v1 # Запуск скрипта авторизации на DockerHub
        with:
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2 # Выполняет push образа в DockerHub 
        with:
          push: true
          tags: geedeega/yamdb:latest

  deploy:
      runs-on: ubuntu-latest
      needs: build_and_push_to_docker_hub
      steps:
        - name: executing remote ssh commands to deploy
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USER }}
            key: ${{ secrets.SSH_KEY }}
            passphrase: ${{ secrets.PASSPHRASE }}
            script: |
              sudo docker pull geedeega/yamdb:latest
              sudo docker-compose stop
              sudo docker-compose rm web
              # Создаст файл для переменных окружения
              touch .env 
              # Наполнит файл переменными окружения из секретов GitHub
              echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
              echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
              echo DB_NAME=${{ secrets.DB_NAME }} >> .env
              echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
              echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
              echo DB_HOST=${{ secrets.DB_HOST }} >> .env
              echo DB_PORT=${{ secrets.DB_PORT }} >> .env
              sudo docker-compose up -d

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно  выполнен!
